;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-jiandao" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M642.048 119.808q17.408-31.744 28.672-46.592t17.408-19.968 16.896-2.048 16.896 15.36 5.12 34.304-7.168 62.976q-3.072 20.48-14.336 46.08t-24.576 50.688-26.112 46.592-19.968 32.768q-8.192 11.264-23.552 31.744l-30.72 40.96q-18.432 23.552-37.888 49.152 11.264 18.432 22.528 34.816 9.216 14.336 17.92 28.16t13.824 22.016q16.384 26.624 47.616 52.224t61.952 40.96q15.36 8.192 45.056 17.408t58.368 28.16 49.664 52.224 17.92 89.6q-2.048 45.056-20.48 77.312t-46.08 52.224-61.952 27.648-67.584 3.072-62.976-22.016-48.128-48.128q-18.432-28.672-25.088-56.832t-6.656-56.832 4.608-58.368 9.728-60.416q3.072-17.408 2.56-29.184t-3.072-20.48-6.656-14.848l-8.192-12.288q-4.096-6.144-12.288-17.92t-16.384-23.04q-10.24-13.312-21.504-27.648l-16.384 22.528q-8.192 10.24-16.896 22.528t-16.896 23.552q-17.408 23.552-18.944 38.4t3.584 35.328q3.072 10.24 7.68 37.376t3.072 62.464-12.288 74.24-39.424 73.728q-24.576 29.696-56.32 44.032t-64 15.36-63.488-10.24-55.808-31.744-39.936-50.176-16.384-65.536q-2.048-54.272 18.432-89.6t50.176-57.856 61.952-35.328 54.784-20.992q21.504-8.192 36.352-15.872t25.6-15.36 17.92-15.872 15.36-17.408 18.944-25.088 22.016-32.256q12.288-18.432 25.6-39.936-8.192-11.264-19.456-25.6-9.216-12.288-23.04-29.184t-30.208-37.376q-16.384-21.504-33.792-50.688t-32.256-57.856-26.112-53.248-15.36-35.84-8.192-29.184-5.12-35.328 2.048-32.256 12.288-20.992q9.216-5.12 15.872-4.608t11.776 5.12 9.728 12.288 11.776 17.92q3.072 5.12 12.8 19.968t23.552 35.84 30.208 46.592l32.768 51.2q38.912 60.416 87.04 135.168 35.84-61.44 67.584-113.664l26.624-45.056q13.312-22.528 25.088-41.984t20.48-34.304 13.824-23.04zM254.976 735.232q-37.888 0-64 26.112t-26.112 62.976 26.112 63.488 64 26.624q36.864 0 62.976-26.624t26.112-63.488-26.112-62.976-62.976-26.112zM710.656 735.232q-36.864 0-63.488 26.112t-26.624 62.976q0 18.432 7.168 34.816t19.456 28.672 28.672 19.456 34.816 7.168q36.864 0 62.976-26.624t26.112-63.488-26.112-62.976-62.976-26.112z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-10017" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M511.993 987.058c-261.949 0-475.060-213.117-475.060-475.073 0-261.94 213.111-475.044 475.060-475.044 261.958 0 475.077 213.104 475.077 475.044 0 261.956-213.118 475.073-475.077 475.073zM511.993 93.613c-230.7 0-418.387 187.681-418.387 418.372 0 230.709 187.687 418.406 418.387 418.406 230.709 0 418.405-187.696 418.405-418.406 0-230.69-187.695-418.372-418.405-418.372zM331.427 836.306c-30.603 0-55.501-24.885-55.501-55.472v-247.417c-23.072-6.819-39.833-28.323-39.833-53.247v-72.426c0-30.606 24.89-55.506 55.486-55.506h131.218c-54.32-38.356-83.546-72.619-87.009-102.102l-0.017-0.157c-2.026-19.347 7.852-36.816 30.195-53.407 17.711-13.104 34.316-19.742 49.37-19.742 26.99 0 51.954 20.631 74.199 61.323 10.935 20.002 20.159 42.928 27.523 64.24 7.373-21.319 16.605-44.252 27.533-64.241 22.247-40.69 47.206-61.323 74.185-61.323 15.041 0 31.637 6.633 49.323 19.713 22.38 16.585 32.281 33.978 30.277 53.181l-0.018 0.157c-3.474 29.632-32.711 63.978-87.054 102.356h131.218c14.813 0 28.747 5.781 39.236 16.276 10.489 10.496 16.259 24.43 16.251 39.237v72.417c0 24.911-16.77 46.417-39.851 53.244v247.42c0 30.588-24.898 55.472-55.502 55.472h-371.227zM701.521 779.639v-243.963h-108.111v243.964h108.111zM536.723 779.639v-243.963h-39.318v243.964h39.318zM440.742 779.639v-243.963h-108.131v243.964h108.131zM741.357 479.004v-70.094h-147.967v70.094h147.967zM536.723 479.004v-70.094h-39.318v70.094h39.318zM440.742 479.004v-70.094h-147.983v70.094h147.983zM393.345 247.461c4.919 9.982 23.938 31.706 65.532 60.809-20.391-53.846-38.755-72.178-43.855-74.649-1.667 0.431-6.761 2.154-15.306 8.479-3.021 2.243-5.045 4.043-6.371 5.36zM619.111 233.625c-5.104 2.476-23.468 20.814-43.862 74.63 41.517-29.071 60.522-50.821 65.465-60.86-1.342-1.316-3.365-3.1-6.35-5.311-8.512-6.305-13.586-8.027-15.253-8.46z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-icon" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M923.701666 347.267145C879.363855 243.767909 796.379862 160.783917 692.879604 116.447129c27.989471-22.038946 63.218834-35.294854 101.608166-35.294854 90.854241 0 164.507728 73.652464 164.507728 164.508751C958.995497 284.049335 945.739589 319.277674 923.701666 347.267145zM916.988778 529.220197c0 107.872846-42.348504 205.649753-110.966301 278.364869l56.794517 56.795541c7.516184 7.518231 12.166087 17.898649 12.166087 29.370935 0 22.937408-18.596544 41.532929-41.535999 41.532929-11.468193 0-21.851681-4.64888-29.367865-12.165064l-61.007469-61.006446c-65.823148 45.99045-145.754618 73.17151-232.145198 73.17151-86.219687 0-166.015058-27.063379-231.764528-72.886007l-60.582797 60.581774c-7.603165 7.603165-18.10331 12.30321-29.704532 12.30321-23.198352 0-42.006719-18.807345-42.006719-42.006719 0-11.601222 4.702092-22.102391 12.305257-29.702486l56.338123-56.339146c-68.425416-72.681346-110.648053-170.312944-110.648053-278.015921 0-224.260623 181.800579-406.063249 406.063249-406.063249C735.189222 123.156948 916.988778 304.959573 916.988778 529.220197zM510.927575 207.170386c-177.86392 0-322.051857 144.18589-322.051857 322.04981S333.063655 851.27103 510.927575 851.27103c177.862897 0 322.048787-144.18589 322.048787-322.04981S688.790472 207.170386 510.927575 207.170386zM678.95343 571.227939 510.927575 571.227939c-23.201421 0-42.007743-18.806321-42.007743-42.007743L468.919832 305.186747c0-23.200398 18.806321-42.004673 42.007743-42.004673 23.198352 0 42.006719 18.805298 42.006719 42.004673l0 182.028776 126.020158 0c23.198352 0 42.004673 18.806321 42.004673 42.004673C720.959126 552.421618 702.152804 571.227939 678.95343 571.227939zM98.905614 352.955704C76.394924 324.371692 62.85556 288.388153 62.85556 249.178129c0-92.798523 75.228355-168.025854 168.025854-168.025854 39.209 0 75.194586 13.540388 103.779621 36.050054C228.949412 162.486698 144.189983 247.244081 98.905614 352.955704z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-celiang" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M192 0v1024h448V0H192z m384 960H256v-256h128v-64H256v-64h192v-64H256v-64h128v-64H256v-64h128V256H256V192h192V128H256V64h320v896z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)